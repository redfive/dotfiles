#!/usr/bin/env bash

info () {
  printf "\r  [ \033[00;34mbashrc\033[0m ] $1\n"
}

## shortcut to this dotfiles path is $DOTFILES
export DOTFILES=$HOME/.dotfiles

# TODO: wire this up to the bash completion:
# https://iridakos.com/programming/2018/03/01/bash-programmable-completion-tutorial
# your project folder that we can `c [tab]` to
export PROJECTS=~/local

# preferring this over the sourcing of path files, for now
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
export EDITOR=`which vim`
#export NOMAD_ADDR=http://nomad.service.consul:4646/
#export VAULT_ADDR=https://vault.service.consul:8200/
export REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

# Set up the ssh auth sock in a way that works with tmux
# If .ssh/ssh_auth_sock is NOT a socket, and SSH_AUTH_SOCK *is* a socket
#   create a symlink, overwriting the existing link if it exists
if [ ! -S ~/.ssh/ssh_auth_sock ] && [ -S "$SSH_AUTH_SOCK" ]; then
    ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

[[ -f ~/.dircolors ]] && eval "$(dircolors ~/.dircolors)"

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -e ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our bash files
typeset -a config_files
config_files=$(find $DOTFILES/* -type f -name "*.bash")

# load the path files
for file in ${config_files[@]}
do
  [[ "${file}" == */path.bash ]] && source "$file"
done

# load everything but the path and completion files
for file in ${config_files[@]}
do
  # these match and remove the longest match
  [[ ${file#*/path.bash} && ${file#*/completion.bash} ]] && source "$file"
done

# load every completion after autocomplete loads
for file in ${config_files[@]}
do
  [[ "${file}" == */completion.bash || "${file}" == */prompt.bash ]] && source "$file"
done

export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='[\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(__git_ps1 " (%s)")]\$ '

unset config_files

# python pyenv setup ; path settings are updated separately
if [[ -e ~/.pyenv ]]; then
  source "$(pyenv root)/completions/pyenv.bash"
  eval "$(pyenv init -)"
#  eval "$(pyenv virtualenv-init -)"
fi

# python virtualenv stuff -- maybe not needed?
[[ -s "${HOME}/.local/bin/virtualenvwrapper.sh" ]] && source ${HOME}/.local/bin/virtualenvwrapper.sh


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
